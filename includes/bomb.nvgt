bomb@[]bombs(0);
class bomb
{
int fallsound, landsound;
int bombx;
int bomby;
int damage;
int bombtime;
string bombtype;
timer bombtimer;
bomb(int bx,int by,int dmg,int sp,string bt)
{
bombx=bx;
bomby=by;
damage=dmg;
bombtime=sp;
bombtype=bt;
fallsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/bombs/"+bombtype+"/*fall*"),me.x,me.y,bombx,bomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
}
}
void bombloop()
{
for(uint i=0; i<bombs.length(); i++)
{
if(bombs[i].bombtimer.elapsed>=bombs[i].bombtime)
{
bombpool.update_sound_2d(bombs[i].fallsound,bombs[i].bombx,bombs[i].bomby);
bombs[i].bombtimer.restart();
if(me.x<bombs[i].bombx and paused==0)
{
bombpool.destroy_sound(bombs[i].fallsound);
bombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/bombs/"+bombs[i].bombtype+"/*land*"),me.x,me.y,bombs[i].bombx,bombs[i].bomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
bombs.remove_at(i);
return;
}
if(me.x>bombs[i].bombx and paused==0)
{
bombpool.destroy_sound(bombs[i].fallsound);
bombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/bombs/"+bombs[i].bombtype+"/*land*"),me.x,me.y,bombs[i].bombx,bombs[i].bomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
bombs.remove_at(i);
return;
}
if(me.x==bombs[i].bombx and me.y==bombs[i].bomby and shieldon==1 and paused==0)
{
bombpool.destroy_sound(bombs[i].fallsound);
if(shieldhitsound==1) shieldslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/shields/"+shieldtype+"/*hit*"),false,0,0,shieldvolume,shieldpitch,false);
shieldstrength-=bombs[i].damage-shielddefence;
bombs.remove_at(i);
return;
}
else if(me.x==bombs[i].bombx and me.y==bombs[i].bomby and shieldon==0 and paused==0)
{
bombpool.destroy_sound(bombs[i].fallsound);
bombs[i].landsound=bombpool.play_stationary_extended(find_sound("sounds/"+soundpack+"/objects/bombs/"+bombs[i].bombtype+"/*land*"),false,0,0,weaponvolume,weaponpitch,false);
if(charhurtsound==1) painslot=bombpool.play_stationary_extended(find_sound("sounds/"+soundpack+"/characters/"+chartype+"/*hurt*"),false,0,0,painvolume,painpitch,false);
int dmg = bombs[i].damage - defence;
health -= dmg;
hearttime -= dmg;
kombatlog.insert_last(bombs[i].bombtype + "'s attack took you " + dmg + " damage.");
bombs.remove_at(i);
return;
}
}
for(uint i1=0; i1<animals.length(); i1++)
{
if(animals[i1].amx==bombs[i].bombx and animals[i1].amy==bombs[i].bomby)
{
bombpool.destroy_sound(bombs[i].fallsound);
bombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/bombs/"+bombs[i].bombtype+"/*land*"),me.x,me.y,bombs[i].bombx,bombs[i].bomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i1].hurtsound=animalpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/animals/"+animals[i1].animaltype+"/*hurt*"),me.x,me.y,animals[i1].amx,animals[i1].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i1].animalhealth-=bombs[i].damage;
bombs.remove_at(i);
return;
}
}
for(uint i2=0; i2<calanders.length(); i2++)
{
if(calanders[i2].calanderx==bombs[i].bombx and calanders[i2].calandery==bombs[i].bomby and calanders[i2].destroyable==true)
{
bombpool.destroy_sound(bombs[i].fallsound);
calpool.destroy_sound(calanders[i2].calandersound);
bombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/bombs/"+bombs[i].bombtype+"/*land*"),me.x,me.y,bombs[i].bombx,bombs[i].bomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
calanders[i2].hurtsound=calpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/calanders/"+calanders[i2].calandertype+"/*break*"),me.x,me.y,calanders[i2].calanderx,calanders[i2].calandery,0,0,0,0,false,0,0,itemvolume,itempitch,false);
bombs.remove_at(i);
calanders.remove_at(i2);
return;
}
}
for(uint i3=0; i3<clocks.length(); i3++)
{
if(clocks[i3].clockx==bombs[i].bombx and clocks[i3].clocky==bombs[i].bomby and clocks[i3].destroyable==true)
{
bombpool.destroy_sound(bombs[i].fallsound);
clockpool.destroy_sound(clocks[i].clocksound);
bombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/bombs/"+bombs[i].bombtype+"/*land*"),me.x,me.y,bombs[i].bombx,bombs[i].bomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
clocks[i3].hurtsound=clockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/clocks/"+clocks[i3].clocktype+"/*break*"),me.x,me.y,clocks[i3].clockx,clocks[i3].clocky,0,0,0,0,false,0,0,itemvolume,itempitch,false);
bombs.remove_at(i);
clocks.remove_at(i3);
return;
}
}
for(uint i4=0; i4<doors.length(); i4++)
{
if(doors[i4].startx==bombs[i].bombx and doors[i4].starty==bombs[i].bomby and doors[i4].destroyable==true)
{
bombpool.destroy_sound(bombs[i].fallsound);
bombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/bombs/"+bombs[i].bombtype+"/*land*"),me.x,me.y,bombs[i].bombx,bombs[i].bomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
doors[i4].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+doors[i4].desttype+"/*hurt*"),me.x,me.y,doors[i4].startx,doors[i4].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
doors[i4].doorhealth-=bombs[i].damage;
bombs.remove_at(i);
return;
}
}
for(uint i5=0; i5<humans.length(); i5++)
{
if(humans[i5].humx==bombs[i].bombx and humans[i5].humy==bombs[i].bomby)
{
bombpool.destroy_sound(bombs[i].fallsound);
bombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/bombs/"+bombs[i].bombtype+"/*land*"),me.x,me.y,bombs[i].bombx,bombs[i].bomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
humans[i5].hurtsound=humanpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/humans/"+humans[i5].humantype+"/*hurt*"),me.x,me.y,humans[i5].humx,humans[i5].humy,0,0,0,0,false,0,0,painvolume,painpitch,false);
humans[i5].humanhealth-=bombs[i].damage;
bombs.remove_at(i);
return;
}
}
for(uint i6=0; i6<objs.length(); i6++)
{
if(objs[i6].itx==bombs[i].bombx and objs[i6].ity==bombs[i].bomby)
{
bombpool.destroy_sound(bombs[i].fallsound);
bombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/bombs/"+bombs[i].bombtype+"/*land*"),me.x,me.y,bombs[i].bombx,bombs[i].bomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
objs[i6].hurtsound=itempool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/items/unsorted/"+objs[i6].objtype+"/"+objs[i6].objtype2+"/*break*"),me.x,me.y,objs[i6].itx,objs[i6].ity,0,0,0,0,false,0,0,itemvolume,itempitch,false);
bombs.remove_at(i);
objs.remove_at(i6);
return;
}
}
for(uint i7=0; i7<projectiles.length(); i7++)
{
if(projectiles[i7].prox==bombs[i].bombx and projectiles[i7].proy==bombs[i].bomby)
{
bombpool.destroy_sound(bombs[i].fallsound);
bombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/bombs/"+bombs[i].bombtype+"/*land*"),me.x,me.y,bombs[i].bombx,bombs[i].bomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i7].hurtsound=projpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/projectiles/"+projectiles[i7].projtype+"/*hurt*"),me.x,me.y,projectiles[i7].prox,projectiles[i7].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i7].projhealth-=bombs[i].damage;
bombs.remove_at(i);
return;
}
}
for(uint i8=0; i8<robots.length(); i8++)
{
if(robots[i8].robx==bombs[i].bombx and robots[i8].roby==bombs[i].bomby)
{
bombpool.destroy_sound(bombs[i].fallsound);
bombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/bombs/"+bombs[i].bombtype+"/*land*"),me.x,me.y,bombs[i].bombx,bombs[i].bomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i8].hurtsound=robpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/robots/"+robots[i8].robottype+"/*hurt*"),me.x,me.y,robots[i8].robx,robots[i8].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i8].robothealth-=bombs[i].damage;
bombs.remove_at(i);
return;
}
}
for(uint i9=0; i9<signs.length(); i9++)
{
if(signs[i9].signx==bombs[i].bombx and signs[i9].signy==bombs[i].bomby and signs[i9].destroyable==true)
{
bombpool.destroy_sound(bombs[i].fallsound);
signpool.destroy_sound(signs[i9].signsound);
bombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/bombs/"+bombs[i].bombtype+"/*land*"),me.x,me.y,bombs[i].bombx,bombs[i].bomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
signs[i9].hurtsound=signpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/signs/"+signs[i9].signtype+"/*break*"),me.x,me.y,signs[i9].signx,signs[i9].signy,0,0,0,0,false,0,0,itemvolume,itempitch,false);
bombs.remove_at(i);
signs.remove_at(i9);
return;
}
}
for(uint i10=0; i10<spikes.length(); i10++)
{
if(spikes[i10].minx<=bombs[i].bombx and spikes[i10].maxx>=bombs[i].bombx and spikes[i10].miny<=bombs[i].bomby and spikes[i10].maxy>=bombs[i].bomby and spikes[i10].destroyable==true)
{
bombpool.destroy_sound(bombs[i].fallsound);
bombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/bombs/"+bombs[i].bombtype+"/*land*"),me.x,me.y,bombs[i].bombx,bombs[i].bomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
spikes[i10].hurtsound=p.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/spikes/"+spikes[i10].spiketype+"/*hurt*"),me.x,me.y,spikes[i10].minx,spikes[i10].miny,0,0,0,0,false,0,0,painvolume,painpitch,false);
spikepool.update_sound_2d(spikes[i10].hurtsound,spikes[i10].minx,spikes[i10].miny);
spikepool.update_sound_range_2d(spikes[i10].hurtsound, 0, spikes[i10].maxx-spikes[i10].minx, 0, spikes[i10].maxy-spikes[i10].miny);
spikes[i10].spikehealth-=bombs[i].damage;
bombs.remove_at(i);
return;
}
}
for(uint i11=0; i11<turrets.length(); i11++)
{
if(turrets[i11].turx==bombs[i].bombx and turrets[i11].tury==bombs[i].bomby)
{
bombpool.destroy_sound(bombs[i].fallsound);
bombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/bombs/"+bombs[i].bombtype+"/*land*"),me.x,me.y,bombs[i].bombx,bombs[i].bomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
turrets[i11].hurtsound=turpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/turrets/"+turrets[i11].turtype+"/*hurt*"),me.x,me.y,turrets[i11].turx,turrets[i11].tury,0,0,0,0,false,0,0,painvolume,painpitch,false);
turrets[i11].turhealth-=bombs[i].damage;
bombs.remove_at(i);
return;
}
}
for(uint i12=0; i12<vehicles.length(); i12++)
{
if(vehicles[i12].vehx==bombs[i].bombx and vehicles[i12].vehy==bombs[i].bomby and vehicles[i12].moveable==false)
{
bombpool.destroy_sound(bombs[i].fallsound);
bombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/bombs/"+bombs[i].bombtype+"/*land*"),me.x,me.y,bombs[i].bombx,bombs[i].bomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
vehicles[i12].hurtsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i12].vehtype+"/*hurt*"),me.x,me.y,vehicles[i12].vehx,vehicles[i12].vehy,0,0,0,0,false,0,0,painvolume,painpitch,false);
vehicles[i12].vehhealth-=bombs[i].damage;
bombs.remove_at(i);
return;
}
}
for(uint i13=0; i13<dest_walls.length(); i13++)
{
if(dest_walls[i13].minx<=bombs[i].bombx and dest_walls[i13].maxx>=bombs[i].bombx and dest_walls[i13].miny<=bombs[i].bomby and dest_walls[i13].maxy>=bombs[i].bomby)
{
bombpool.destroy_sound(bombs[i].fallsound);
bombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/bombs/"+bombs[i].bombtype+"/*land*"),me.x,me.y,bombs[i].bombx,bombs[i].bomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
dest_walls[i13].hurtsound=p.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/walls/"+dest_walls[i13].dest_wall+"/*hurt*"),me.x,me.y,dest_walls[i13].minx,dest_walls[i13].miny,0,0,0,0,false,0,0,wallvolume,wallpitch,false);
p.update_sound_2d(dest_walls[i13].hurtsound,dest_walls[i13].minx,dest_walls[i13].miny);
p.update_sound_range_2d(dest_walls[i13].hurtsound, 0, dest_walls[i13].maxx-dest_walls[i13].minx, 0, dest_walls[i13].maxy-dest_walls[i13].miny);
dest_walls[i13].dest_wallhealth-=bombs[i].damage;
bombs.remove_at(i);
return;
}
}
for(uint i14=0; i14<zombies.length(); i14++)
{
if(zombies[i14].zombx==bombs[i].bombx and zombies[i14].zomby==bombs[i].bomby)
{
bombpool.destroy_sound(bombs[i].fallsound);
bombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/bombs/"+bombs[i].bombtype+"/*land*"),me.x,me.y,bombs[i].bombx,bombs[i].bomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i14].hurtsound=zombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/zombies/"+zombies[i14].zombietype+"/*hurt*"),me.x,me.y,zombies[i14].zombx,zombies[i14].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i14].zombiehealth-=bombs[i].damage;
bombs.remove_at(i);
return;
}
}
for(uint i15=0; i15<psdoors.length(); i15++)
{
if(psdoors[i15].startx==bombs[i].bombx and psdoors[i15].starty==bombs[i].bomby and psdoors[i15].destroyable==true)
{
bombpool.destroy_sound(bombs[i].fallsound);
bombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/bombs/"+bombs[i].bombtype+"/*land*"),me.x,me.y,bombs[i].bombx,bombs[i].bomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
psdoors[i15].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+psdoors[i15].desttype+"/*hurt*"),me.x,me.y,psdoors[i15].startx,psdoors[i15].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
psdoors[i15].psdoorhealth-=bombs[i].damage;
bombs.remove_at(i);
return;
}
}
for(uint i16=0; i16<bosses.length(); i16++)
{
if(bosses[i16].bossx==bombs[i].bombx and bosses[i16].bossy==bombs[i].bomby)
{
bombpool.destroy_sound(bombs[i].fallsound);
bombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/bombs/"+bombs[i].bombtype+"/*land*"),me.x,me.y,bombs[i].bombx,bombs[i].bomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
bosses[i16].hurtsound=bosspool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/bosses/"+bosses[i16].bosstype+"/*hurt*"),me.x,me.y,bosses[i16].bossx,bosses[i16].bossy,0,0,0,0,false,0,0,painvolume,painpitch,false);
bosses[i16].bosshealth-=bombs[i].damage;
bombs.remove_at(i);
return;
}
}
}
}
void spawn_bomb(int x,int y,int dmg,int sp,string bombtype)
{
bomb b1(x,y,dmg,sp,bombtype);
bombs.insert_last(b1);
}
void destroy_all_bombs()
{
for(uint i=0; i<bombs.length(); i++)
{
bombpool.destroy_sound(bombs[i].fallsound);
}
bombs.resize(0);
}

bombzone@[]bombzones(0);
class bombzone
{
double minx, maxx;
int bomby;
int spawntime;
string bombtype;
timer spawntimer;
bombzone(double mx,double mx2,int by,int sp,string bt)
{
minx=mx;
maxx=mx2;
bomby=by;
spawntime=sp;
bombtype=bt;
}
}
void bombzoneloop()
{
for(uint i=0; i<bombzones.length(); i++)
{
if(bombzones[i].minx<=me.x and bombzones[i].maxx>=me.x and bombzones[i].spawntimer.elapsed>=bombzones[i].spawntime)
{
spawn_bomb(random(bombzones[i].minx, bombzones[i].maxx), bombzones[i].bomby, 1*xp+1, random(2250, 2500), bombzones[i].bombtype);
bombzones[i].spawntimer.restart();
}
}
}
void spawn_bombzone(double x1,double x2,int y,int sp,string type)
{
bombzone bz1(x1,x2,y,sp,type);
bombzones.insert_last(bz1);
}
void destroy_all_bombzones()
{
bombzones.resize(0);
}

timebomb@[]timebombs(0);
class timebomb
{
int loopsound,landsound;
int timbombx;
int timbomby;
int damage;
int timbombtime;
string timbombtype;
timer beeptimer, timbombtimer;
timebomb(int bx,int by,int dmg,int btime,string bt)
{
timbombx=bx;
timbomby=by;
damage=dmg;
timbombtime=btime;
timbombtype=bt;
loopsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/time bombs/"+timbombtype+"/*tick*"),me.x,me.y,timbombx,timbomby,0,0,0,0,true,0,0,painvolume,painpitch,false);
}
}
void timebombloop()
{
for(uint i=0; i<timebombs.length(); i++)
{
if(timebombs[i].timbombtimer.elapsed>=timebombs[i].timbombtime)
{
bombpool.update_sound_2d(timebombs[i].loopsound,timebombs[i].timbombx,timebombs[i].timbomby);
timebombs[i].timbombtimer.restart();
for(uint i1=0; i1<animals.length(); i1++)
{
if(animals[i1].amx==timebombs[i].timbombx and animals[i1].amy==timebombs[i].timbomby)
{
bombpool.destroy_sound(timebombs[i].loopsound);
timebombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/time bombs/"+timebombs[i].timbombtype+"/*land*"),me.x,me.y,timebombs[i].timbombx,timebombs[i].timbomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i1].hurtsound=animalpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/animals/"+animals[i1].animaltype+"/*hurt*"),me.x,me.y,animals[i1].amx,animals[i1].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i1].animalhealth-=timebombs[i].damage;
timebombs.remove_at(i);
return;
}
}
for(uint i2=0; i2<calanders.length(); i2++)
{
if(calanders[i2].calanderx==timebombs[i].timbombx and calanders[i2].calandery==timebombs[i].timbomby and calanders[i2].destroyable==true)
{
bombpool.destroy_sound(timebombs[i].loopsound);
calpool.destroy_sound(calanders[i2].calandersound);
timebombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/time bombs/"+timebombs[i].timbombtype+"/*land*"),me.x,me.y,timebombs[i].timbombx,timebombs[i].timbomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
calanders[i2].hurtsound=calpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/calanders/"+calanders[i2].calandertype+"/*break*"),me.x,me.y,calanders[i2].calanderx,calanders[i2].calandery,0,0,0,0,false,0,0,itemvolume,itempitch,false);
timebombs.remove_at(i);
calanders.remove_at(i2);
return;
}
}
for(uint i3=0; i3<clocks.length(); i3++)
{
if(clocks[i3].clockx==timebombs[i].timbombx and clocks[i3].clocky==timebombs[i].timbomby and clocks[i3].destroyable==true)
{
bombpool.destroy_sound(timebombs[i].loopsound);
clockpool.destroy_sound(clocks[i].clocksound);
timebombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/time bombs/"+timebombs[i].timbombtype+"/*land*"),me.x,me.y,timebombs[i].timbombx,timebombs[i].timbomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
clocks[i3].hurtsound=clockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/clocks/"+clocks[i3].clocktype+"/*break*"),me.x,me.y,clocks[i3].clockx,clocks[i3].clocky,0,0,0,0,false,0,0,itemvolume,itempitch,false);
timebombs.remove_at(i);
clocks.remove_at(i3);
return;
}
}
for(uint i4=0; i4<doors.length(); i4++)
{
if(doors[i4].startx==timebombs[i].timbombx and doors[i4].starty==timebombs[i].timbomby and doors[i4].destroyable==true)
{
bombpool.destroy_sound(timebombs[i].loopsound);
timebombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/time bombs/"+timebombs[i].timbombtype+"/*land*"),me.x,me.y,timebombs[i].timbombx,timebombs[i].timbomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
doors[i4].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+doors[i4].desttype+"/*hurt*"),me.x,me.y,doors[i4].startx,doors[i4].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
doors[i4].doorhealth-=timebombs[i].damage;
timebombs.remove_at(i);
return;
}
}
for(uint i5=0; i5<humans.length(); i5++)
{
if(humans[i5].humx==timebombs[i].timbombx and humans[i5].humy==timebombs[i].timbomby)
{
bombpool.destroy_sound(timebombs[i].loopsound);
timebombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/time bombs/"+timebombs[i].timbombtype+"/*land*"),me.x,me.y,timebombs[i].timbombx,timebombs[i].timbomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
humans[i5].hurtsound=humanpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/humans/"+humans[i5].humantype+"/*hurt*"),me.x,me.y,humans[i5].humx,humans[i5].humy,0,0,0,0,false,0,0,painvolume,painpitch,false);
humans[i5].humanhealth-=timebombs[i].damage;
timebombs.remove_at(i);
return;
}
}
for(uint i6=0; i6<objs.length(); i6++)
{
if(objs[i6].itx==timebombs[i].timbombx and objs[i6].ity==timebombs[i].timbomby)
{
bombpool.destroy_sound(timebombs[i].loopsound);
timebombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/time bombs/"+timebombs[i].timbombtype+"/*land*"),me.x,me.y,timebombs[i].timbombx,timebombs[i].timbomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
objs[i6].hurtsound=itempool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/items/unsorted/"+objs[i6].objtype+"/"+objs[i6].objtype2+"/*break*"),me.x,me.y,objs[i6].itx,objs[i6].ity,0,0,0,0,false,0,0,itemvolume,itempitch,false);
timebombs.remove_at(i);
objs.remove_at(i6);
return;
}
}
for(uint i7=0; i7<projectiles.length(); i7++)
{
if(projectiles[i7].prox==timebombs[i].timbombx and projectiles[i7].proy==timebombs[i].timbomby)
{
bombpool.destroy_sound(timebombs[i].loopsound);
timebombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/time bombs/"+timebombs[i].timbombtype+"/*land*"),me.x,me.y,timebombs[i].timbombx,timebombs[i].timbomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i7].hurtsound=projpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/projectiles/"+projectiles[i7].projtype+"/*hurt*"),me.x,me.y,projectiles[i7].prox,projectiles[i7].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i7].projhealth-=timebombs[i].damage;
timebombs.remove_at(i);
return;
}
}
for(uint i8=0; i8<robots.length(); i8++)
{
if(robots[i8].robx==timebombs[i].timbombx and robots[i8].roby==timebombs[i].timbomby)
{
bombpool.destroy_sound(timebombs[i].loopsound);
timebombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/time bombs/"+timebombs[i].timbombtype+"/*land*"),me.x,me.y,timebombs[i].timbombx,timebombs[i].timbomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i8].hurtsound=robpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/robots/"+robots[i8].robottype+"/*hurt*"),me.x,me.y,robots[i8].robx,robots[i8].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i8].robothealth-=timebombs[i].damage;
timebombs.remove_at(i);
return;
}
}
for(uint i9=0; i9<signs.length(); i9++)
{
if(signs[i9].signx==timebombs[i].timbombx and signs[i9].signy==timebombs[i].timbomby and signs[i9].destroyable==true)
{
bombpool.destroy_sound(timebombs[i].loopsound);
signpool.destroy_sound(signs[i9].signsound);
timebombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/time bombs/"+timebombs[i].timbombtype+"/*land*"),me.x,me.y,timebombs[i].timbombx,timebombs[i].timbomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
signs[i9].hurtsound=signpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/signs/"+signs[i9].signtype+"/*break*"),me.x,me.y,signs[i9].signx,signs[i9].signy,0,0,0,0,false,0,0,itemvolume,itempitch,false);
timebombs.remove_at(i);
signs.remove_at(i9);
return;
}
}
for(uint i10=0; i10<spikes.length(); i10++)
{
if(spikes[i10].minx<=timebombs[i].timbombx and spikes[i10].maxx>=timebombs[i].timbombx and spikes[i10].miny<=timebombs[i].timbomby and spikes[i10].maxy>=timebombs[i].timbomby and spikes[i10].destroyable==true)
{
bombpool.destroy_sound(timebombs[i].loopsound);
timebombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/time bombs/"+timebombs[i].timbombtype+"/*land*"),me.x,me.y,timebombs[i].timbombx,timebombs[i].timbomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
spikes[i10].hurtsound=p.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/spikes/"+spikes[i10].spiketype+"/*hurt*"),me.x,me.y,spikes[i10].minx,spikes[i10].miny,0,0,0,0,false,0,0,painvolume,painpitch,false);
spikepool.update_sound_2d(spikes[i10].hurtsound,spikes[i10].minx,spikes[i10].miny);
spikepool.update_sound_range_2d(spikes[i10].hurtsound, 0, spikes[i10].maxx-spikes[i10].minx, 0, spikes[i10].maxy-spikes[i10].miny);
spikes[i10].spikehealth-=timebombs[i].damage;
timebombs.remove_at(i);
return;
}
}
for(uint i11=0; i11<turrets.length(); i11++)
{
if(turrets[i11].turx==timebombs[i].timbombx and turrets[i11].tury==timebombs[i].timbomby)
{
bombpool.destroy_sound(timebombs[i].loopsound);
timebombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/time bombs/"+timebombs[i].timbombtype+"/*land*"),me.x,me.y,timebombs[i].timbombx,timebombs[i].timbomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
turrets[i11].hurtsound=turpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/turrets/"+turrets[i11].turtype+"/*hurt*"),me.x,me.y,turrets[i11].turx,turrets[i11].tury,0,0,0,0,false,0,0,painvolume,painpitch,false);
turrets[i11].turhealth-=timebombs[i].damage;
timebombs.remove_at(i);
return;
}
}
for(uint i12=0; i12<vehicles.length(); i12++)
{
if(vehicles[i12].vehx==timebombs[i].timbombx and vehicles[i12].vehy==timebombs[i].timbomby and vehicles[i12].moveable==false)
{
bombpool.destroy_sound(timebombs[i].loopsound);
timebombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/time bombs/"+timebombs[i].timbombtype+"/*land*"),me.x,me.y,timebombs[i].timbombx,timebombs[i].timbomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
vehicles[i12].hurtsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i12].vehtype+"/*hurt*"),me.x,me.y,vehicles[i12].vehx,vehicles[i12].vehy,0,0,0,0,false,0,0,painvolume,painpitch,false);
vehicles[i12].vehhealth-=timebombs[i].damage;
timebombs.remove_at(i);
return;
}
}
for(uint i13=0; i13<dest_walls.length(); i13++)
{
if(dest_walls[i13].minx<=timebombs[i].timbombx and dest_walls[i13].maxx>=timebombs[i].timbombx and dest_walls[i13].miny<=timebombs[i].timbomby and dest_walls[i13].maxy>=timebombs[i].timbomby)
{
bombpool.destroy_sound(timebombs[i].loopsound);
timebombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/time bombs/"+timebombs[i].timbombtype+"/*land*"),me.x,me.y,timebombs[i].timbombx,timebombs[i].timbomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
dest_walls[i13].hurtsound=p.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/walls/"+dest_walls[i13].dest_wall+"/*hurt*"),me.x,me.y,dest_walls[i13].minx,dest_walls[i13].miny,0,0,0,0,false,0,0,wallvolume,wallpitch,false);
p.update_sound_2d(dest_walls[i13].hurtsound,dest_walls[i13].minx,dest_walls[i13].miny);
p.update_sound_range_2d(dest_walls[i13].hurtsound, 0, dest_walls[i13].maxx-dest_walls[i13].minx, 0, dest_walls[i13].maxy-dest_walls[i13].miny);
dest_walls[i13].dest_wallhealth-=timebombs[i].damage;
timebombs.remove_at(i);
return;
}
}
for(uint i14=0; i14<zombies.length(); i14++)
{
if(zombies[i14].zombx==timebombs[i].timbombx and zombies[i14].zomby==timebombs[i].timbomby)
{
bombpool.destroy_sound(timebombs[i].loopsound);
timebombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/time bombs/"+timebombs[i].timbombtype+"/*land*"),me.x,me.y,timebombs[i].timbombx,timebombs[i].timbomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i14].hurtsound=zombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/zombies/"+zombies[i14].zombietype+"/*hurt*"),me.x,me.y,zombies[i14].zombx,zombies[i14].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i14].zombiehealth-=timebombs[i].damage;
timebombs.remove_at(i);
return;
}
}
for(uint i15=0; i15<psdoors.length(); i15++)
{
if(psdoors[i15].startx==timebombs[i].timbombx and psdoors[i15].starty==timebombs[i].timbomby and psdoors[i15].destroyable==true)
{
bombpool.destroy_sound(timebombs[i].loopsound);
timebombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/time bombs/"+timebombs[i].timbombtype+"/*land*"),me.x,me.y,timebombs[i].timbombx,timebombs[i].timbomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
psdoors[i15].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+psdoors[i15].desttype+"/*hurt*"),me.x,me.y,psdoors[i15].startx,psdoors[i15].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
psdoors[i15].psdoorhealth-=timebombs[i].damage;
timebombs.remove_at(i);
return;
}
}
for(uint i16=0; i16<bosses.length(); i16++)
{
if(bosses[i16].bossx==timebombs[i].timbombx and bosses[i16].bossy==timebombs[i].timbomby)
{
bombpool.destroy_sound(timebombs[i].loopsound);
timebombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/time bombs/"+timebombs[i].timbombtype+"/*land*"),me.x,me.y,timebombs[i].timbombx,timebombs[i].timbomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
bosses[i16].hurtsound=bosspool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/bosses/"+bosses[i16].bosstype+"/*hurt*"),me.x,me.y,bosses[i16].bossx,bosses[i16].bossy,0,0,0,0,false,0,0,painvolume,painpitch,false);
bosses[i16].bosshealth-=timebombs[i].damage;
timebombs.remove_at(i);
return;
}
}
if(me.x<timebombs[i].timbombx or me.y<timebombs[i].timbomby and paused==0)
{
bombpool.destroy_sound(timebombs[i].loopsound);
timebombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/time bombs/"+timebombs[i].timbombtype+"/*land*"),me.x,me.y,timebombs[i].timbombx,timebombs[i].timbomby,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
timebombs.remove_at(i);
return;
}
if(me.x>timebombs[i].timbombx or me.y>timebombs[i].timbomby and paused==0)
{
bombpool.destroy_sound(timebombs[i].loopsound);
timebombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/time bombs/"+timebombs[i].timbombtype+"/*land*"),me.x,me.y,timebombs[i].timbombx,timebombs[i].timbomby,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
timebombs.remove_at(i);
return;
}
if(me.x==timebombs[i].timbombx and me.y==timebombs[i].timbomby and shieldon==1 and paused==0)
{
bombpool.destroy_sound(timebombs[i].loopsound);
if(shieldhitsound==1) shieldslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/shields/"+shieldtype+"/*hit*"),false,0,0,shieldvolume,shieldpitch,false);
shieldstrength-=timebombs[i].damage-shielddefence;
timebombs.remove_at(i);
return;
}
else if(me.x==timebombs[i].timbombx and me.y==timebombs[i].timbomby and shieldon==0 and paused==0)
{
bombpool.destroy_sound(timebombs[i].loopsound);
timebombs[i].landsound=bombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/time bombs/"+timebombs[i].timbombtype+"/*land*"),me.x,me.y,timebombs[i].timbombx,timebombs[i].timbomby,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(charhurtsound==1) painslot=bombpool.play_stationary_extended(find_sound("sounds/"+soundpack+"/characters/"+chartype+"/*hurt*"),false,0,0,painvolume,painpitch,false);
int dmg = timebombs[i].damage - defence;
health -= dmg;
hearttime -= dmg;
kombatlog.insert_last(timebombs[i].timbombtype + "'s attack took you " + dmg + " damage.");
timebombs.remove_at(i);
return;
}
}
}
}
void spawn_timebomb(int x,int y,int dmg,int timbombtime,string timbombtype)
{
timebomb tb1(x,y,dmg,timbombtime,timbombtype);
timebombs.insert_last(tb1);
}
void destroy_all_timebombs()
{
for(uint i=0;i<timebombs.length();i++)
{
bombpool.destroy_sound(timebombs[i].loopsound);
}
timebombs.resize(0);
}
