bullet@[]bullets(0);
class bullet
{
int bullsound, wepsound;
int bullx;
int bully;
int range;
int range2;
int damage;
int speed;
string direction;
string bulltype;
string bulltype2;
timer speedtimer;
bullet(int bx,int by,int br,int br2,int dmg,int sp,string dr,string bt,string bt2)
{
bullx=bx;
bully=by;
range=br;
range2=br2;
damage=dmg;
speed=sp;
direction=dr;
bulltype=bt;
bulltype2=bt2;
if(weploopsound==1) bullsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bulltype+"/"+bulltype2+"/*loop*"),me.x,me.y,bullx,bully,0,0,0,0,true,0,0,weaponvolume,weaponpitch,false);
}
void bull_bounce()
{
if(direction=="right")
direction="left";
else if(direction=="left")
direction="right";
else if(direction=="up")
direction="down";
else if(direction=="down")
direction="up";
}
}
void bulletloop()
{
for(uint i=0; i<bullets.length(); i++)
{
if(bullets[i].speedtimer.elapsed>=bullets[i].speed)
{
bulletpool.update_sound_2d(bullets[i].bullsound,bullets[i].bullx,bullets[i].bully);
bullets[i].speedtimer.restart();
if(bullets[i].direction=="right")
{
bullets[i].bullx++;
}
if(bullets[i].direction=="left")
{
bullets[i].bullx--;
}
if(bullets[i].direction=="up")
{
bullets[i].bully++;
}
if(bullets[i].direction=="down")
{
bullets[i].bully--;
}
if(string_contains(gmt(bullets[i].bullx,bullets[i].bully),"wall",1)>-1)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(weprecsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*rico*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
bullets[i].bull_bounce();
}
if(me.x==bullets[i].bullx and me.y==bullets[i].bully and shieldon==1 and invehicle==false)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(shieldhitsound==1) shieldslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/shields/"+shieldtype+"/*hit*"),false,0,0,shieldvolume,shieldpitch,false);
shieldstrength-=bullets[i].damage-shielddefence;
bullets.remove_at(i);
return;
}
else if(me.x==bullets[i].bullx and me.y==bullets[i].bully and shieldon==0 and invehicle==false)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(charhurtsound==1) painslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/characters/"+chartype+"/*hurt*"),false,0,0,painvolume,painpitch,false);
int dmg = bullets[i].damage - defence;
health -= dmg;
hearttime -= dmg;
kombatlog.insert_last(bullets[i].bulltype2 + "'s attack took you " + dmg + " damage.");
bullets.remove_at(i);
return;
}
if(absolute(bullets[i].bullx-me.x)>bullets[i].range or absolute(bullets[i].bully-me.y)>bullets[i].range2)
{
bulletpool.destroy_sound(bullets[i].bullsound);
bullets.remove_at(i);
return;
}
}
for(uint i1=0; i1<animals.length(); i1++)
{
if(animals[i1].amx==bullets[i].bullx and animals[i1].amy==bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
animals[i1].hurtsound=animalpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/animals/"+animals[i1].animaltype+"/*hurt*"),me.x,me.y,animals[i1].amx,animals[i1].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i1].animalhealth-=bullets[i].damage;
kombatlog.insert_last(bullets[i].damage+" damage to "+animals[i1].animaltype+" by "+weapontype2+"'s weapon attack.");
bullets.remove_at(i);
return;
}
}
for(uint i2=0; i2<calanders.length(); i2++)
{
if(calanders[i2].calanderx==bullets[i].bullx and calanders[i2].calandery==bullets[i].bully and calanders[i2].destroyable==true)
{
bulletpool.destroy_sound(bullets[i].bullsound);
calpool.destroy_sound(calanders[i2].calandersound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
calanders[i2].hurtsound=calpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/calanders/"+calanders[i2].calandertype+"/*break*"),me.x,me.y,calanders[i2].calanderx,calanders[i2].calandery,0,0,0,0,false,0,0,itemvolume,itempitch,false);
bullets.remove_at(i);
calanders.remove_at(i2);
return;
}
}
for(uint i3=0; i3<clocks.length(); i3++)
{
if(clocks[i3].clockx==bullets[i].bullx and clocks[i3].clocky==bullets[i].bully and clocks[i3].destroyable==true)
{
bulletpool.destroy_sound(bullets[i].bullsound);
clockpool.destroy_sound(clocks[i].clocksound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
clocks[i3].hurtsound=clockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/clocks/"+clocks[i3].clocktype+"/*break*"),me.x,me.y,clocks[i3].clockx,clocks[i3].clocky,0,0,0,0,false,0,0,itemvolume,itempitch,false);
bullets.remove_at(i);
clocks.remove_at(i3);
return;
}
}
for(uint i4=0; i4<doors.length(); i4++)
{
if(doors[i4].startx==bullets[i].bullx and doors[i4].starty==bullets[i].bully and doors[i4].destroyable==true)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
doors[i4].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+doors[i4].desttype+"/*hurt*"),me.x,me.y,doors[i4].startx,doors[i4].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
doors[i4].doorhealth-=bullets[i].damage;
kombatlog.insert_last(bullets[i].damage+" damage to door by "+weapontype2+"'s weapon attack.");
bullets.remove_at(i);
return;
}
}
for(uint i5=0; i5<humans.length(); i5++)
{
if(humans[i5].humx==bullets[i].bullx and humans[i5].humy==bullets[i].bully and humans[i5].weapontype=="melee" and humans[i5].wepdef==1)
{
int refchance = random(0, 100);
int refprob = 80;
if(refchance < refprob)
{
bulletpool.destroy_sound(bullets[i].bullsound);
humans[i5].refsound=humanpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+humans[i5].weapontype+"/"+humans[i5].weapontype2+"/*block*"),me.x,me.y,humans[i5].humx,humans[i5].humy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
bullets.remove_at(i);
return;
}
else
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
humans[i5].hurtsound=humanpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/humans/"+humans[i5].humantype+"/*hurt*"),me.x,me.y,humans[i5].humx,humans[i5].humy,0,0,0,0,false,0,0,painvolume,painpitch,false);
humans[i5].humanhealth -= (bullets[i].damage * 0.5);
kombatlog.insert_last(bullets[i].damage+" damage to "+humans[i5].humantype+" by "+weapontype2+"'s weapon attack.");
bullets.remove_at(i);
return;
}
}
else if(humans[i5].humx==bullets[i].bullx and humans[i5].humy==bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
humans[i5].hurtsound=humanpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/humans/"+humans[i5].humantype+"/*hurt*"),me.x,me.y,humans[i5].humx,humans[i5].humy,0,0,0,0,false,0,0,painvolume,painpitch,false);
humans[i5].humanhealth-=bullets[i].damage;
kombatlog.insert_last(bullets[i].damage+" damage to "+humans[i5].humantype+" by "+weapontype2+"'s weapon attack.");
bullets.remove_at(i);
return;
}
}
for(uint i6=0; i6<objs.length(); i6++)
{
if(objs[i6].itx==bullets[i].bullx and objs[i6].ity==bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
itempool.destroy_sound(objs[i6].objsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
objs[i6].hurtsound=itempool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/items/unsorted/"+objs[i6].objtype+"/"+objs[i6].objtype2+"/*break*"),me.x,me.y,objs[i6].itx,objs[i6].ity,0,0,0,0,false,0,0,itemvolume,itempitch,false);
bullets.remove_at(i);
objs.remove_at(i6);
return;
}
}
for(uint i7=0; i7<projectiles.length(); i7++)
{
if(projectiles[i7].prox==bullets[i].bullx and projectiles[i7].proy==bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
projectiles[i7].hurtsound=projpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/projectiles/"+projectiles[i7].projtype+"/*hurt*"),me.x,me.y,projectiles[i7].prox,projectiles[i7].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i7].projhealth-=bullets[i].damage;
kombatlog.insert_last(bullets[i].damage+" damage to "+projectiles[i7].projtype+" by "+weapontype2+"'s weapon attack.");
bullets.remove_at(i);
return;
}
}
for(uint i8=0; i8<robots.length(); i8++)
{
if(robots[i8].robx==bullets[i].bullx and robots[i8].roby==bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
robots[i8].hurtsound=robpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/robots/"+robots[i8].robottype+"/*hurt*"),me.x,me.y,robots[i8].robx,robots[i8].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i8].robothealth-=bullets[i].damage;
kombatlog.insert_last(bullets[i].damage+" damage to "+robots[i8].robottype+" by "+weapontype2+"'s weapon attack.");
bullets.remove_at(i);
return;
}
}
for(uint i9=0; i9<signs.length(); i9++)
{
if(signs[i9].signx==bullets[i].bullx and signs[i9].signy==bullets[i].bully and signs[i9].destroyable==true)
{
bulletpool.destroy_sound(bullets[i].bullsound);
signpool.destroy_sound(signs[i9].signsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
signs[i9].hurtsound=signpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/signs/"+signs[i9].signtype+"/*break*"),me.x,me.y,signs[i9].signx,signs[i9].signy,0,0,0,0,false,0,0,itemvolume,itempitch,false);
bullets.remove_at(i);
signs.remove_at(i9);
return;
}
}
for(uint i10=0; i10<spikes.length(); i10++)
{
if(spikes[i10].minx<=bullets[i].bullx and spikes[i10].maxx>=bullets[i].bullx and spikes[i10].miny<=bullets[i].bully and spikes[i10].maxy>=bullets[i].bully and spikes[i10].destroyable==true)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
spikes[i10].hurtsound=spikepool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/spikes/"+spikes[i10].spiketype+"/*hurt*"),me.x,me.y,spikes[i10].minx,spikes[i10].miny,0,0,0,0,false,0,0,painvolume,painpitch,false);
spikepool.update_sound_2d(spikes[i10].hurtsound,spikes[i10].minx,spikes[i10].miny);
spikepool.update_sound_range_2d(spikes[i10].hurtsound, 0, spikes[i10].maxx-spikes[i10].minx, 0, spikes[i10].maxy-spikes[i10].miny);
spikes[i10].spikehealth-=bullets[i].damage;
kombatlog.insert_last(bullets[i].damage+" damage to "+spikes[i10].spiketype+" by "+weapontype2+"'s weapon attack.");
bullets.remove_at(i);
return;
}
}
for(uint i11=0; i11<turrets.length(); i11++)
{
if(turrets[i11].turx==bullets[i].bullx and turrets[i11].tury==bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
turrets[i11].hurtsound=turpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/turrets/"+turrets[i11].turtype+"/*hurt*"),me.x,me.y,turrets[i11].turx,turrets[i11].tury,0,0,0,0,false,0,0,painvolume,painpitch,false);
turrets[i11].turhealth-=bullets[i].damage;
kombatlog.insert_last(bullets[i].damage+" damage to "+turrets[i11].turtype+" by "+weapontype2+"'s weapon attack.");
bullets.remove_at(i);
return;
}
}
for(uint i12=0; i12<vehicles.length(); i12++)
{
if(vehicles[i12].vehx==bullets[i].bullx and vehicles[i12].vehy==bullets[i].bully and vehicles[i12].moveable==false)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
vehicles[i12].hurtsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i12].vehtype+"/*hurt*"),me.x,me.y,vehicles[i12].vehx,vehicles[i12].vehy,0,0,0,0,false,0,0,painvolume,painpitch,false);
vehicles[i12].vehhealth-=bullets[i].damage;
kombatlog.insert_last(bullets[i].damage+" damage to "+vehicles[i12].vehtype+" by "+weapontype2+"'s weapon attack.");
bullets.remove_at(i);
return;
}
}
for(uint i13=0; i13<dest_walls.length(); i13++)
{
if(dest_walls[i13].minx<=bullets[i].bullx and dest_walls[i13].maxx>=bullets[i].bullx and dest_walls[i13].miny<=bullets[i].bully and dest_walls[i13].maxy>=bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
dest_walls[i13].hurtsound=p.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/walls/"+dest_walls[i13].dest_wall+"/*hurt*"),me.x,me.y,dest_walls[i13].minx,dest_walls[i13].miny,0,0,0,0,false,0,0,wallvolume,wallpitch,false);
p.update_sound_2d(dest_walls[i13].hurtsound,dest_walls[i13].minx,dest_walls[i13].miny);
p.update_sound_range_2d(dest_walls[i13].hurtsound, 0, dest_walls[i13].maxx-dest_walls[i13].minx, 0, dest_walls[i13].maxy-dest_walls[i13].miny);
dest_walls[i13].dest_wallhealth-=bullets[i].damage;
kombatlog.insert_last(bullets[i].damage+" damage to destroyable "+dest_walls[i13].dest_wall+" by "+weapontype2+"'s weapon attack.");
bullets.remove_at(i);
return;
}
}
for(uint i14=0; i14<zombies.length(); i14++)
{
if(zombies[i14].zombx==bullets[i].bullx and zombies[i14].zomby==bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
zombies[i14].hurtsound=zombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/zombies/"+zombies[i14].zombietype+"/*hurt*"),me.x,me.y,zombies[i14].zombx,zombies[i14].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i14].zombiehealth-=bullets[i].damage;
kombatlog.insert_last(bullets[i].damage+" damage to "+zombies[i14].zombietype+" by "+weapontype2+"'s weapon attack.");
bullets.remove_at(i);
return;
}
}
for(uint i15=0; i15<psdoors.length(); i15++)
{
if(psdoors[i15].startx==bullets[i].bullx and psdoors[i15].starty==bullets[i].bully and psdoors[i15].destroyable==true)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
psdoors[i15].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+psdoors[i15].desttype+"/*hurt*"),me.x,me.y,psdoors[i15].startx,psdoors[i15].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
psdoors[i15].psdoorhealth-=bullets[i].damage;
kombatlog.insert_last(bullets[i].damage+" damage to locked door by "+weapontype2+"'s weapon attack.");
bullets.remove_at(i);
return;
}
}
for(uint i16=0; i16<bosses.length(); i16++)
{
if(bosses[i16].bossx==bullets[i].bullx and bosses[i16].bossy==bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
bosses[i16].hurtsound=bosspool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/bosses/"+bosses[i16].bosstype+"/*hurt*"),me.x,me.y,bosses[i16].bossx,bosses[i16].bossy,0,0,0,0,false,0,0,painvolume,painpitch,false);
bosses[i16].bosshealth-=bullets[i].damage;
kombatlog.insert_last(bullets[i].damage+" damage to "+bosses[i16].bosstype+" by "+weapontype2+"'s weapon attack.");
bullets.remove_at(i);
return;
}
}
for(uint i17=0; i17<helpers.length(); i17++)
{
if(helpers[i17].helpx==bullets[i].bullx and helpers[i17].helpy==bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
helpers[i17].hurtsound=helperpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/helpers/"+helpers[i17].helpertype+"/*hurt*"),me.x,me.y,helpers[i17].helpx,helpers[i17].helpy,0,0,0,0,false,0,0,painvolume,painpitch,false);
helpers[i17].helperhealth-=bullets[i].damage;
kombatlog.insert_last(bullets[i].damage+" damage to "+helpers[i17].helpertype+" by "+weapontype2+"'s weapon attack.");
bullets.remove_at(i);
return;
}
}
}
}
void spawn_bullet(int x,int y,int range,int range2,int damage,int speed,string direction,string bulltype,string bulltype2)
{
bullet bl1(x,y,range,range2,damage,speed,direction,bulltype,bulltype2);
bullets.insert_last(bl1);
}
void destroy_all_bullets()
{
for(uint i=0; i<bullets.length(); i++)
{
bulletpool.destroy_sound(bullets[i].bullsound);
}
bullets.resize(0);
}
